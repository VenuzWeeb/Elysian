package com.elysian.client.module.modules.exploit;

import com.elysian.client.module.ModuleType;
import com.elysian.client.module.ToggleableModule;
import com.elysian.client.property.NumberProperty;
import com.elysian.client.property.Property;
import net.minecraft.entity.Entity;
import net.minecraft.entity.item.EntityItemFrame;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemShulkerBox;
import net.minecraft.util.EnumHand;
import net.minecraftforge.fml.common.gameevent.TickEvent;

public class FrameDupe extends ToggleableModule {

    private final Property<Boolean> shulkersonly  = new Property<Boolean>(true, "Shulkers Only", "Shulkers Only");
    private final NumberProperty<Integer> range  = new NumberProperty<Integer>(5, 0, 6, "Range");
    private final NumberProperty<Integer> turns  = new NumberProperty<Integer>(1, 0, 3, "Turns");
    private final NumberProperty<Integer> ticks  = new NumberProperty<Integer>(10, 1, 20, "Ticks");

    private int timeout_ticks = 0;

    public FrameDupe() {
        super("FrameDupe", new String[] {"para el pendejo de usa"}, "para el pendejo de usa", ModuleType.EXPLOIT);
        this.offerProperties(shulkersonly, range, turns, ticks, this.keybind);
    }

    @Override
    public void update(TickEvent tick) {
        if (mc.player != null && mc.world != null) {

            if (shulkersonly.getValue()) {
                int shulker_slot = getShulkerSlot();
                if (shulker_slot != -1) {
                    mc.player.inventory.currentItem = shulker_slot;
                }
            }

            for (Entity frame : mc.world.loadedEntityList) {
                if (frame instanceof EntityItemFrame) {
                    if (mc.player.getDistance(frame) <= range.getValue()) {
                        if (timeout_ticks >= ticks.getValue()) {
                            if (((EntityItemFrame) frame).getDisplayedItem().getItem() == Items.AIR && !mc.player.getHeldItemMainhand().isEmpty) {
                                mc.playerController.interactWithEntity(mc.player, frame, EnumHand.MAIN_HAND);
                            }
                            if (((EntityItemFrame) frame).getDisplayedItem().getItem() != Items.AIR) {
                                for (int i = 0; i < turns.getValue(); i++) {
                                    mc.playerController.interactWithEntity(mc.player, frame, EnumHand.MAIN_HAND);
                                }
                                mc.playerController.attackEntity(mc.player, frame);
                                timeout_ticks = 0;
                            }
                        }
                        ++timeout_ticks;
                    }
                }
            }

        }
    }

    private int getShulkerSlot() {
        int shulker_slot = -1;
        for (int i = 0; i < 9; i++) {
            Item item = mc.player.inventory.getStackInSlot(i).getItem();
            if (item instanceof ItemShulkerBox) shulker_slot = i;
        }
        return shulker_slot;
    }

}
